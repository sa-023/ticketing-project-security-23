version: 2
jobs:
  build:
    # Job-1
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk
    working_directory: /tmp/workspace
    steps:
      - checkout
      - run: mkdir -p /tmp/workspace
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn clean install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - persist_to_workspace:
          root: /tmp/workspace
          paths: .
  # Job-2
  docker-image-and-publish:
    machine: true
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ls -a /tmp/workspace
      - run:
          name: Create Docker image and push to ECR
          # We will copy and paste all four push commands for the app into the below command (AWS -> ECR -> select ECR repository -> click on View push commands). We should only update the second command. Instead of (.), we should specify the folder. Ex: docker build -t ticketinapp /tmp/workspace (In ECR, it looks like the following: docker build -t ticketinapp .)
          command: aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin 289073734562.dkr.ecr.eu-west-2.amazonaws.com && docker build -t ticketinapp /tmp/workspace && docker tag ticketinapp:latest 289073734562.dkr.ecr.eu-west-2.amazonaws.com/ticketinapp:latest && docker push 289073734562.dkr.ecr.eu-west-2.amazonaws.com/ticketinapp:latest
  # Job-3
  deploy-job:
    docker:
      #specify the version you desire here
      - image: circleci/node:10.0.0
    steps:
      - run:
          name: Execute Deployment Script
          # Will run the commands that we added inside the EC2 machine "deploy_image.sh" file line by line.
          command: |
            ssh -o "StrictHostKeyChecking=no" ec2-user@ec2-45-71-123-175.eu-west-2.compute.amazonaws.com <<'ENDSSH'
            /bin/bash bin/deploy_image.sh
            docker ps
workflows:
  version: 2
  build_and_test:
    # build job will run first
    jobs:
      - build
      - docker-image-and-publish:
          # Means "docker-image-and-publish" depends on "build" job.
          requires:
            - build
      - deploy-job:
          # Means "deploy-job" depends on "docker-image-and-publish" job.
          requires:
            - docker-image-and-publish