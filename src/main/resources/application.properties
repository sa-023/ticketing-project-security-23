#spring.datasource.url=jdbc:postgresql://localhost:5432/ticketing-app
# · With Docker Compose, we don't use our local Postgres, so we should use the container_name(mypostgres) that we have in docker-compose.yaml.
#   This way, it will connect to our Docker image postgresql.
#spring.datasource.url=jdbc:postgresql://mypostgres:5432/ticketing-app

# · We should use the RDS endpoint here and the RDS database name for the datasource.url. Ex: jdbc:postgresql://ticketingdb.cub7dsjfhdkf.eu-west-2.rds.amazon.com:5432/ticketingdb
spring.datasource.url=jdbc:postgresql://RDS endpoint:5432/RDS DB name
# · Credentials should be exactly the same as in the RDS database. Credential Settings
spring.datasource.username=postgres
spring.datasource.password=company123

spring.jpa.show-sql=false

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=create

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true